fn main() {
    // case-sensitive

    let book = "Idiot";
    let Book = "The Stranger";
    let BoOK = "Sapiens";

    let book_title = "The old Man and the Sea"; // OK
    let bookTitle = "";
    let BookTitle = "";

    /*
        ╔════════════════════════════╦════════════════════════════════════════════════════════╗
        ║ Item                       ║  Convention                                     		  ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Crates	                 ║  snake_case (but prefer single word)                   ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Modules                    ║	snake_case                                            ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Types	                     ║  CamelCase                                             ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Traits                     ║	CamelCase                                             ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Enum variants              ║	CamelCase                                             ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Functions                  ║	snake_case                                            ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Methods                    ║	snake_case                                            ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ General constructors       ║	new or with_more_details                              ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Conversion constructors    ║	from_some_other_type                                  ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Local variables            ║	snake_case                                            ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Static variables           ║	SCREAMING_SNAKE_CASE                                  ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Constant variables         ║	SCREAMING_SNAKE_CASE                                  ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Type parameters            ║	concise CamelCase, usually single uppercase letter: T ║
        ╠════════════════════════════╬════════════════════════════════════════════════════════╣
        ║ Lifetimes                  ║	short, lowercase: 'a                                  ║
        ╚════════════════════════════╩════════════════════════════════════════════════════════╝
    */
}
